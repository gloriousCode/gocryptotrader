{{define "exchanges mock" -}}
{{template "header" .}}
## Mock Testing Suite

## Current Features for {{.Name}}
+ REST recording service
+ REST mock response server

### How to enable

+ Mock testing is enabled by default in some exchanges; to disable and run live endpoint testing parse -tags=mock_test_off as a go test param.

+ To record a live endpoint create two files for an exchange.

### file one - your_current_exchange_name_live_test.go

```go
//+build mock_test_off

// This will build if build tag mock_test_off is parsed and will do live testing
// using all tests in (exchange)_test.go
package your_current_exchange_name

import (
	"os"
	"testing"
	"log"

	"github.com/thrasher-corp/gocryptotrader/config"
	"github.com/thrasher-corp/gocryptotrader/exchanges/sharedtestvalues"
)

var mockTests = false

func TestMain(m *testing.M) {
	cfg := config.GetConfig()
	cfg.LoadConfig("../../testdata/configtest.json")
	your_current_exchange_nameConfig, err := cfg.GetExchangeConfig("your_current_exchange_name")
	if err != nil {
		log.Fatal("your_current_exchange_name Setup() init error", err)
	}
	your_current_exchange_nameConfig.AuthenticatedAPISupport = true
	your_current_exchange_nameConfig.APIKey = apiKey
	your_current_exchange_nameConfig.APISecret = apiSecret
	l.SetDefaults()
	l.Setup(&your_current_exchange_nameConfig)
	log.Printf(sharedtestvalues.LiveTesting, l.Name, l.APIUrl)
	os.Exit(m.Run())
}
```

### file two - your_current_exchange_name_mock_test.go

```go
//+build !mock_test_off

// This will build if build tag mock_test_off is not parsed and will try to mock
// all tests in _test.go
package your_current_exchange_name

import (
	"os"
	"testing"
	"log"

	"github.com/thrasher-corp/gocryptotrader/config"
	"github.com/thrasher-corp/gocryptotrader/exchanges/mock"
	"github.com/thrasher-corp/gocryptotrader/exchanges/sharedtestvalues"
)

const mockfile = "../../testdata/http_mock/your_current_exchange_name/your_current_exchange_name.json"

var mockTests = true

func TestMain(m *testing.M) {
	cfg := config.GetConfig()
	cfg.LoadConfig("../../testdata/configtest.json")
	your_current_exchange_nameConfig, err := cfg.GetExchangeConfig("your_current_exchange_name")
	if err != nil {
		log.Fatal("your_current_exchange_name Setup() init error", err)
	}
	your_current_exchange_nameConfig.AuthenticatedAPISupport = true
	your_current_exchange_nameConfig.APIKey = apiKey
	your_current_exchange_nameConfig.APISecret = apiSecret
	l.SetDefaults()
	l.Setup(&your_current_exchange_nameConfig)

	serverDetails, newClient, err := mock.NewVCRServer(mockfile)
	if err != nil {
		log.Fatalf("Mock server error %s", err)
	}

	g.HTTPClient = newClient
	g.APIUrl = serverDetails

	log.Printf(sharedtestvalues.MockTesting, l.Name, l.APIUrl)
	os.Exit(m.Run())
}

```

+ Once those files are completed go through each invidual test function and add

```go
var s SomeExchange

func TestDummyTest(t *testing.T) {
    s.Verbose = true // This will show you some fancy debug output
    s.HTTPRecording = true // This will record the request and response payloads
    s.API.Endpoints.URL = zbTradeURL // This will overwrite the current mock url at localhost
    s.API.Endpoints.URLSecondary = zbMarketURL // This is only if your API has multiple endpoints
    s.HTTPClient = http.DefaultClient // This will ensure that a real HTTPClient is used to record
    err := s.SomeExchangeEndpointFunction()
    // check error
}
```

+ After this is completed it should populate a new mocktest.json file for you with the relavent payloads in testdata
+ To check if the recording was successful, comment out recording and apiurl changes, then re-run test.

```go
var s SomeExchange

func TestDummyTest(t *testing.T) {
    // s.APIURL = exchangeDefaultURL // This will overwrite the current mock url at localhost
    s.Verbose = true // This will show you some fancy debug output
    // s.HTTPRecording = true // This will record the request and response payloads

    err := s.SomeExchangeEndpointFunction()
    // check error
}
```

+ The payload should be the same.

### Please click GoDocs chevron above to view current GoDoc information for this package
{{template "contributions"}}
{{template "donations" .}}
{{end}}
